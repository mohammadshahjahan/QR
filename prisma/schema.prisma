// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model User{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  username String? @unique
  email String? @unique
  hashedPassword String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  staticwebsites StaticWebsite[]
  staticsms StaticSMS[]
  staticemails StaticEmail[]
  dynamicwebsites DyanamicWebsite[]
  dynamicsms DyanamicSMS[]
  dynamicemails DyanamicEmail[]
 
}

model StaticWebsite{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  goToURL String
  createdAt DateTime @default(now())
  userId String @db.ObjectId
  name String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model StaticSMS{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  countryCode String
  phoneNumber String
  createdAt DateTime @default(now())
  userId String @db.ObjectId
  name String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model StaticEmail{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  goToMail String
  createdAt DateTime @default(now())
  userId String @db.ObjectId
  name String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model DyanamicWebsite{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  goToURL String
  createdAt DateTime @default(now())
  userId String @db.ObjectId
  proxyURL String
  name String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model DyanamicSMS{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  countryCode String
  phoneNumber String
  createdAt DateTime @default(now())
  userId String @db.ObjectId
  proxyURL String
  name String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model DyanamicEmail{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  goToMail String
  createdAt DateTime @default(now())
  userId String @db.ObjectId
  proxyURL String
  name String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}